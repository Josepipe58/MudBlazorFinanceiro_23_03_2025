@page "/categoria/editar"

<MudPaper Style="height: 800px" Class="d-flex align-top flex-grow-1 border border-solid mud-border-default pa-4 " Elevation="0">
    <MudCard Elevation="25" Class="d-flex align-center flex-grow-1">
        <MudStack row>
             <MudForm Model="@Categoria" @ref="@Form" Style="width: 590px">
                 <MudText Typo="Typo.h5" Color="Color.Info" Align="Align.Center">EDITAR CATEGORIA</MudText>            
                    <br />
                    <MudCardContent>
                        <MudNumericField @bind-Value="Categoria.Id" Disabled Label="Código da Despesa" Variant="Variant.Outlined" Margin="Margin.Normal"></MudNumericField>
                        
                            <MudTextField @bind-Value="Categoria.NomeCategoria" Placeholder="Digite uma categoria..." Label="Nome da Categoria" Variant="Variant.Outlined" 
                            Margin="Margin.Normal"></MudTextField>                        
                            <br />
                            <MudStack row AlignItems="AlignItems.Center">
                                <MudButton Variant="Variant.Filled" Color="Color.Info" DropShadow="false" OnClick="Editar">Editar Categoria</MudButton>
                                <MudButton Variant="Variant.Outlined" Color="Color.Info" DropShadow="false" Href="@($"/categoria")">Voltar à Página Inicial</MudButton>
                            </MudStack>           
                    </MudCardContent>
             </MudForm>
        </MudStack>
    </MudCard>
</MudPaper>

@code {
    [SupplyParameterFromQuery]
    private int Id { get; set; }
    private Categoria Categoria { get; set; } = new Categoria();   
    MudForm Form = new();

    protected override async Task OnInitializedAsync()
    {
        Categoria = await categoriaService.ObterCategoriaPorId(Id);
        if (Categoria.Id <= 0)
        {
            NavigationManager.NavigateTo("notfound");
        }       
    }

    private async Task Editar()
    {
        if (string.IsNullOrWhiteSpace(Categoria.NomeCategoria))
        {
            await dialogService.ShowMessageBox("Atenção!", "O nome da categoria é obrigatória e não pode estar vazio.", "Fechar");
            NavigationManager.NavigateTo($"/categoria/editar");            
        }
        else  if (Categoria.Id > 0)
        {
            await categoriaService.EditarCategoria(Categoria);
            Categoria = new Categoria();
            snackBar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
            snackBar.Add($"Categoria alterada com sucesso!", MudBlazor.Severity.Info);
            NavigationManager.NavigateTo("/categoria");
        }
        else
        {
            NavigationManager.NavigateTo("Not found");
        }
    }
}