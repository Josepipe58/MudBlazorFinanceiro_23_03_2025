@page "/categoria"

<MudCard Elevation="25" Class="d-flex align-top flex-grow-1 border border-solid mud-border-default pa-4">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h4" GutterBottom="true" Color="Color.Info" Align="Align.Center">Página Inicial de Categorias</MudText><br />
            <MudButton Size="Size.Small" Variant="Variant.Filled" Color="Color.Info" Href="@($"categoria/adicionar")">Adicionar Nova Categoria</MudButton>
        </CardHeaderContent>
    </MudCardHeader>

    <MudChip T="string" Style="height:8px; width: 1650px; background-color:steelblue"></MudChip>

    @if (ListaDeCategorias == null)
    {
        <MudProgressCircular Color="Color.Error" Indeterminate="true" />
        <h2 style="color:indianred">Ocorreu um erro...</h2>
    }
    else
    {
        <MudTable Items="ListaDeCategorias" Elevation="0" FixedHeader="@fixar_cabecalho" Height="@(fixar_cabecalho ?"595px":"")">
            <HeaderContent>
                <MudTh>Código</MudTh>
                <MudTh>Nome da Categoria</MudTh>
                <MudTh>Editar | Excluir</MudTh>
            </HeaderContent>
            <RowTemplate Context="categoria">
                <MudTd DataLabel="id">@categoria.Id</MudTd>
                <MudTd DataLabel="nomecategoria">@categoria.NomeCategoria</MudTd>
                <MudTd DataLabel="">
                    <MudFab Href="@($"categoria/editar?id={categoria.Id}")" Color="Color.Default" StartIcon="@Icons.Material.Filled.Edit"
                            Size="Size.Small" IconSize="Size.Small"></MudFab>
                    <MudFab @onclick="@(e=> ConfirmarExcluir(categoria.Id))" Color="Color.Default" StartIcon="@Icons.Material.Filled.Delete"
                            Size="Size.Small" IconSize="Size.Small"></MudFab>
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager RowsPerPageString="Linhas por página: " HorizontalAlignment="HorizontalAlignment.Start" PageSizeOptions="new int[]{25, 50, 100}" />
            </PagerContent>
        </MudTable>
    }
</MudCard>    
@code {

    private Categoria Categoria { get; set; } = new Categoria();
    private IEnumerable<Categoria> ListaDeCategorias = new List<Categoria>();
    bool fixar_cabecalho = true;  

    protected override async Task OnInitializedAsync()
    {
        await ObterCategorias();
    }

    private async Task<IEnumerable<Categoria>> ObterCategorias()
    {
        ListaDeCategorias = await categoriaService.ObterCategorias();
        return ListaDeCategorias;
    }

    private async Task ConfirmarExcluir(int id)
    {
        bool? result = await dialogService.ShowMessageBox(
        "Atenção!", $"Você tem certeza que deseja excluir esse item {id} ?",
        yesText: "Excluir", cancelText: "Cancelar");

        if (result ?? false)
        {
            await Excluir(id);
        }
        else
        {
            NavigationManager.NavigateTo("/categoria");
            await ObterCategorias();
        }
    }

    private async Task Excluir(int id)
    {
        await categoriaService.ExcluirCategoria(id);
        Categoria = new Categoria();
        snackBar.Add("Categoria excluída com sucesso!", MudBlazor.Severity.Error);
        await ObterCategorias();
        NavigationManager.NavigateTo("/categoria");
    }
}

