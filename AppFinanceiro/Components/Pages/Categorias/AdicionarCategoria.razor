@page "/categoria/adicionar"

<MudCard Elevation="25">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h5" Color="Color.Primary">CADASTRAR CATEGORIAS</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default" />
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent>
        <MudStack Class="justify-space-between mud-width-full">
            <MudTextField @bind-Value="Categoria.NomeCategoria" Placeholder="Digite uma categoria..." Label="Nome da Categoria" Variant="Variant.Outlined" 
            Margin="Margin.Dense"></MudTextField>            
        </MudStack>            
        <br />
        <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="Adicionar">Adicionar Categoria</MudButton>
        <MudButton Variant="Variant.Outlined" Color="Color.Info" Href="@($"/categoria")">Voltar à Página Inicial</MudButton>
    </MudCardContent>
</MudCard>
@if (ListaDeCategorias == null)
{
    <MudProgressCircular Color="Color.Error" Indeterminate="true" />
    <h2 style="color:indianred">Ocorreu um erro...</h2>
}
else
{
    <MudTable Elevation="0" Striped="false" Items="ListaDeCategorias" FixedHeader="@fixar_cabecalho" FixedFooter="@fixar_rodape" 
Height="@(fixar_cabecalho || fixar_rodape ?"400px":"")">
    <ToolBarContent>
        <MudText Typo="Typo.h5">Lista de Categorias</MudText>  
    </ToolBarContent>
    <HeaderContent>        
        <MudTh>Código</MudTh>
        <MudTh>Nome da Categoria</MudTh>       
    </HeaderContent>
    <RowTemplate>        
        <MudTd DataLabel="Código">@context.Id</MudTd>
        <MudTd DataLabel="Nome da Categoria">@context.NomeCategoria</MudTd>       
    </RowTemplate>
    <FooterContent>
        <MudTh>Código</MudTh>
        <MudTh>Nome da Categoria</MudTh>        
    </FooterContent>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[]{25, 50, 100}" />
    </PagerContent>
</MudTable>
<MudSwitch @bind-Value="fixar_cabecalho" Color="Color.Primary">Fixar Cabeçalho</MudSwitch>
<MudSwitch @bind-Value="fixar_rodape" Color="Color.Primary">Fixar Rodapé</MudSwitch>}

@code {
    [SupplyParameterFromQuery]
    private int Id { get; set; }

    private Categoria Categoria{ get; set; } = new Categoria();

    private IEnumerable<Categoria> ListaDeCategorias = new List<Categoria>();

    bool fixar_cabecalho = true;
    bool fixar_rodape = false;  

    protected override async Task OnInitializedAsync()
    {        
        await ObterCategorias();
    }

    private async Task<IEnumerable<Categoria>> ObterCategorias()
    {
        ListaDeCategorias = await categoriaService.ObterCategorias();
        return ListaDeCategorias;
    }

    private async Task Adicionar()
    {
        if (string.IsNullOrWhiteSpace(Categoria.NomeCategoria))
        {
            await dialogService.ShowMessageBox("Atenção!", "O nome da categoria é obrigatória e não pode estar vazio.", "Fechar");
            NavigationManager.NavigateTo("/categoria/adicionar");            
        }
        else  if (Categoria.Id <= 0)
        {
            await categoriaService.AdicionarCategoria(Categoria);
            Categoria = new Categoria();
            snackBar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
            snackBar.Add("Categoria adicionada com sucesso!", MudBlazor.Severity.Info);        
            await ObterCategorias();
        }
        else
        {
            NavigationManager.NavigateTo("Not found");
            await ObterCategorias();       
        }
    }    
}