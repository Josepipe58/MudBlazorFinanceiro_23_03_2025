@page "/financa/editar"

<MudPaper Style="height: 800px" Class="d-flex align-top flex-grow-1 border border-solid mud-border-default pa-4 " Elevation="0">
    <MudCard Elevation="25" Class="d-flex align-center flex-grow-1 ">
        <MudStack row>
            <MudForm Model="@Financa" @ref="@Form" Style="width: 590px">
                <MudText Typo="Typo.h5" Color="Color.Info" Align="Align.Center">EDITAR FINANÇA</MudText>
                <br />
                <MudCardContent>
                    <MudNumericField @bind-Value="Financa.Id" Disabled Label="Código da Finança" Variant="Variant.Outlined" Margin="Margin.Normal"></MudNumericField>
                    <MudStack Class="justify-space-between mud-width-full">
                        <MudSelect @bind-Value="Financa.NomeFinanca" Placeholder="Selecione um Tipo de Finança" Label="Nome de Finança" Variant="Variant.Outlined" 
                        Margin="Margin.Normal">
                            @foreach (var item in BancoDeListas.TNomeDeFinancas)
                            {
                                <MudSelectItem Value="item.Nome">@item.Nome</MudSelectItem>
                            }
                        </MudSelect>
                    </MudStack>
                    <MudStack Class="justify-space-between mud-width-full">
                        <MudSelect @bind-Value="Financa.NomeOperacao" Placeholder="Selecione um Tipo de Operaçao" Label="Nome da Operação" Variant="Variant.Outlined" Margin="Margin.Normal">
                            @foreach (var financa in BancoDeListas.TNomeDeOperacoes)
                            {
                                <MudSelectItem Value="financa.Nome">@financa.Nome</MudSelectItem>
                            }
                        </MudSelect>
                    </MudStack>
                    <MudTextField @bind-Value="Financa.Descricao" Placeholder="Digite uma descrição..." Label="Descrição" Variant="Variant.Outlined"
                                  Margin="Margin.Normal"></MudTextField>
                    <MudTextField @bind-Value="Financa.Valor" Label="Digite um Valor" Variant="Variant.Outlined" Margin="Margin.Normal"></MudTextField>
                    <MudDatePicker @bind-Date="Financa.Data" Placeholder="Selecione a Data" Label="Data" Variant="Variant.Outlined" Margin="Margin.Normal"></MudDatePicker>
                    <MudSelect @bind-Value="Financa.Tipo" Placeholder="Selecione um Tipo de Finança" Label="Tipo de Finança" Variant="Variant.Outlined" Margin="Margin.Dense">
                        @foreach (var tipo in BancoDeListas.TNomeDeTipos)
                        {
                            <MudSelectItem Value="tipo.Nome">@tipo.Nome</MudSelectItem>
                        }
                    </MudSelect>
                    <br />
                    <MudStack row AlignItems="AlignItems.Center">
                        <MudButton Variant="Variant.Filled" Color="Color.Info" DropShadow="false" OnClick="Editar">Editar Finança</MudButton>
                        <MudButton Variant="Variant.Outlined" Color="Color.Info" DropShadow="false" Href="@($"/financa")">Voltar à Página Inicial</MudButton>
                    </MudStack>
                </MudCardContent>
            </MudForm>
        </MudStack>
    </MudCard>
</MudPaper>
@code {

    [SupplyParameterFromQuery]
    private int Id { get; set; }
    private Financa Financa{ get; set; } = new Financa();
    private IEnumerable<Categoria> ListaDeCategorias = new List<Categoria>();
    MudForm Form = new();

    protected override async Task OnInitializedAsync()
    {
        Financa = await financaService.ObterFinancaPorId(Id);
        if (Financa.Id <= 0)
        {
            NavigationManager.NavigateTo("notfound");
        }       
        await ObterCategorias();
    }
    private async Task<IEnumerable<Categoria>> ObterCategorias()
    {
        ListaDeCategorias = await categoriaService.ObterCategorias();
        return ListaDeCategorias;
    }

    private async Task Editar()
    {
        if (Financa.Id > 0 && !string.IsNullOrWhiteSpace(Financa.NomeFinanca) && !string.IsNullOrWhiteSpace(Financa.NomeOperacao)  
        && !string.IsNullOrWhiteSpace(Financa.Descricao)  && !string.IsNullOrWhiteSpace(Convert.ToString(Financa.Data)) 
        && !string.IsNullOrWhiteSpace(Financa.Tipo) && Financa.Valor > 0)
        {
            await financaService.EditarFinanca(Financa);
            Financa = new Financa();
            snackBar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
            snackBar.Add($"Finança alterada com sucesso!", MudBlazor.Severity.Info);
            NavigationManager.NavigateTo("/financa");  
        }
        else
        {
            await dialogService.ShowMessageBox("Atenção!", "Erro! Existe um ou mais de um campo, com dados vazios ou incorretos.", "Fechar");
            NavigationManager.NavigateTo("/financa/editar");
        }
    }
}