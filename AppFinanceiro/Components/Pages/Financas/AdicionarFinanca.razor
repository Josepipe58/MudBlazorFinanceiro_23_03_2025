@page "/financa/adicionar"
@using Application.Abstractions.ConsultasAbstractions

<MudCardContent>
    <MudText Typo="Typo.h5" Color="Color.Info">CADASTRAR FINANÇAS</MudText>
    <MudText>
    <h3>
        <a style="color:darkgray">| Saldo da Poupança > @saldoPoupanca.ToString("c") |</a>
        <a style="color:darkgray">| Saldo da LCI > @saldoLCI.ToString("c") |</a>
        <a style="color:darkgray">| Saldo Total de Poupança e Investimento > @saldoTotal.ToString("c") |</a>
    </h3> 
    </MudText><br/>
             <MudSelect @bind-Value="Financa.NomeFinanca" Placeholder="Selecione uma Finança" Label="Nome da Finança" Variant="Variant.Outlined" Margin="Margin.Dense">
                    @foreach (var financa in ListaDeFinanca.ListaDeNomesDeFinancas())
                    {
                        <MudSelectItem Value="financa">@financa</MudSelectItem>
                    }
             </MudSelect>
             <MudStack Class="justify-space-between mud-width-full">
                <MudSelect @bind-Value="Financa.NomeOperacao" Placeholder="Selecione um Tipo de Operaçao" Label="Nome da Operação" Variant="Variant.Outlined" Margin="Margin.Dense">
                    @foreach (var financa in ListaDeFinanca.ListaDeNomesDeOperacao())
                    {
                        <MudSelectItem Value="financa">@financa</MudSelectItem>
                    }
                </MudSelect>
            </MudStack>
            <MudTextField @bind-Value="Financa.Descricao" Placeholder="Digite uma descrição..." Label="Descrição" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            <MudNumericField @bind-Value="Financa.Valor" Label="Digite Um Valor" Variant="Variant.Outlined" Margin="Margin.Dense"></MudNumericField> 
            <MudDatePicker @bind-Date="Financa.Data" Label="Selecione Uma data" Variant="Variant.Outlined" Margin="Margin.Dense" ></MudDatePicker>
            <MudSelect @bind-Value="Financa.Tipo" Placeholder="Selecione um Tipo de Finança" Label="Tipo de Finança" Variant="Variant.Outlined" Margin="Margin.Dense">
                    @foreach (var tipo in ListaDeFinanca.ListaDeTiposDeFinancas())
                    {
                        <MudSelectItem Value="tipo">@tipo</MudSelectItem>
                    }
             </MudSelect>             
            <br />
            <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="Adicionar">Adicionar Finança</MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Info" Href="@($"/financa")">Voltar à Página Inicial.</MudButton>
        </MudCardContent>
<MudTable Elevation="0" Striped="false" Items="ListaDeFinancas" FixedHeader="@fixar_cabecalho" FixedFooter="@fixar_rodape" 
    Height="@(fixar_cabecalho || fixar_rodape ?"400px":"")">    
    <HeaderContent>
        <MudTh>Código</MudTh>
        <MudTh>Nome da Finança</MudTh>
        <MudTh>Nome da Operaçao</MudTh>
        <MudTh>Descrição</MudTh>
        <MudTh>Valor</MudTh>
        <MudTh>Data</MudTh>
        <MudTh>Tipo</MudTh>
    </HeaderContent>
    <RowTemplate Context="Financa">
        <MudTd DataLabel="Código">@Financa.Id</MudTd>
        <MudTd DataLabel="Nome da Financa">@Financa.NomeFinanca</MudTd>
        <MudTd DataLabel="Nome da Operação">@Financa.NomeOperacao</MudTd>
        <MudTd DataLabel="Descrição">@Financa.Descricao</MudTd>
        <MudTd DataLabel="Valor">@Financa.Valor.ToString("c")</MudTd> 
        <MudTd DataLabel="Data">@Convert.ToDateTime(@Financa.Data).ToString("dd/MM/yyyy")</MudTd> 
        <MudTd DataLabel="Tipo">@Financa.Tipo</MudTd>
    </RowTemplate>
    <FooterContent>
        <MudTh>Código</MudTh>
        <MudTh>Nome da Finança</MudTh>
        <MudTh>Nome da Operaçao</MudTh>
        <MudTh>Descrição</MudTh>
        <MudTh>Valor</MudTh>
        <MudTh>Data</MudTh>
        <MudTh>Tipo</MudTh>
    </FooterContent>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[]{25, 50, 100}" />
    </PagerContent>
</MudTable>
<MudSwitch @bind-Value="fixar_cabecalho" Color="Color.Primary">Fixar Cabeçalho</MudSwitch>
<MudSwitch @bind-Value="fixar_rodape" Color="Color.Primary">Fixar Rodapé</MudSwitch>
@code {
    private Financa Financa{ get; set; } = new Financa(); 
    
    [SupplyParameterFromQuery]
    private int Id { get; set; }

    bool fixar_cabecalho = true;
    bool fixar_rodape = false;
    public decimal saldoPoupanca;
    public decimal saldoLCI;
    public decimal saldoTotal;

    private IEnumerable<Financa> ListaDeFinancas = new List<Financa>();
   

    protected override async Task OnInitializedAsync()
    {
        saldoPoupanca = saldoFinanceiroCPIService.SaldoDaPoupanca();
        saldoLCI = saldoFinanceiroCPIService.SaldoDeInvestimento();
        saldoTotal = saldoPoupanca + saldoLCI;
        Financa.Data = DateTime.Today;
        await ObterFinancas();
    }

    private async Task<IEnumerable<Financa>> ObterFinancas()
    {
        ListaDeFinancas = await financaService.ObterListaDeFinancas();
        return ListaDeFinancas;
    }

    private async Task Adicionar()
    {
        if (Financa.Id <= 0 && !string.IsNullOrWhiteSpace(Financa.NomeFinanca) && !string.IsNullOrWhiteSpace(Financa.NomeOperacao)  
        && !string.IsNullOrWhiteSpace(Financa.Descricao)  && !string.IsNullOrWhiteSpace(Convert.ToString(Financa.Data)) 
        && !string.IsNullOrWhiteSpace(Financa.Tipo) && Financa.Valor > 0)
        {
            await financaService.AdicionarFinanca(Financa);           
            Financa = new Financa();
            snackBar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
            snackBar.Add("Finança adicionada com sucesso!", Severity.Info);           
            await ObterFinancas();
        }
        else
        {
            await dialogService.ShowMessageBox("Atenção!", "Erro! Existe um ou mais de um campo, com dados vazios ou incorretos.", "Fechar");
            NavigationManager.NavigateTo("/financa/adicionar");
        }
    }
}